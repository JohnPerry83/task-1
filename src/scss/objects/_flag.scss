/*------------------------------------*\
    #FLAG
\*------------------------------------*/

/**
 * The flag object is a design pattern similar to the media object, however it
 * utilises `display: table[-cell];` to give us control over the vertical
 * alignments of the text and image. csswizardry.com/2013/05/the-flag-object
 */

// Predefine the variables below in order to alter and enable specific features.
$flag-gutter:             $base-spacing-unit !default;
$flag-gutter--tiny:       $base-spacing-unit--tiny !default;
$flag-gutter--small:      $base-spacing-unit--small !default;
$flag-gutter--large:      $base-spacing-unit--large !default;
$flag-gutter--huge:       $base-spacing-unit--huge !default;

$enable-flag--tiny:       false !default;
$enable-flag--small:      false !default;
$enable-flag--large:      false !default;
$enable-flag--huge:       false !default;
$enable-flag--rev:        false !default;
$enable-flag--flush:      false !default;
$enable-flag--top:        false !default;
$enable-flag--bottom:     false !default;
$enable-flag--responsive: false !default;
$flag-collapse-at:        720px !default;


/* @styleguide

## Flag Object
The flag object is a design pattern similar to the media object, however it utilises `display: table[-cell];` to give us control over the vertical alignments of the text and image. csswizardry.com/2013/05/the-flag-object

```
<div class="o-flag">
    <div class="o-flag__img">
        <img src="/img/pdf-icon.svg" width="43" height="52">
    </div>
    <div class="o-flag__body">
        <p class="u-mb---">Account charges</p>
        <a href="#">Download PDF <span>(56kb)</span></a>
    </div>
</div>
```

*/

/**
 * 1. Allows us to control vertical alignments
 * 2. Force the object to be the full width of its parent. Combined with [1],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */
.#{$object-namespace}flag,
%#{$object-namespace}flag {
    display: table; /* [1] */
    width: 100%; /* [2] */
}

    /**
     * Items within a flag object. There should only ever be one of each.
     *
     * 1. Default to aligning content to their middles.
     */
    .#{$object-namespace}flag__img,
    %#{$object-namespace}flag__img,
    .#{$object-namespace}flag__body,
    %#{$object-namespace}flag__body {
        display: table-cell;
        vertical-align: middle; /* [1] */
    }

    /**
     * Flag images have a space between them and the body of the object.
     */
    .#{$object-namespace}flag__img,
    %#{$object-namespace}flag__img {
        padding-right: $flag-gutter;

        > img,
        > .#{$object-namespace}flag__img__child {
            display: block;
            max-width: none;
        }

    }

    /**
     * The container for the main content of the flag object.
     *
     * 1. Forces the `.flag__body` to take up all remaining space.
     */
    .#{$object-namespace}flag__body,
    %#{$object-namespace}flag__body {
        width: 100%; /* [1] */

        &,
        > :last-child {
            margin-bottom: 0;
        }

    }





@if ($enable-flag--tiny == true) {

    /**
     * Tiny flags.
     */

    .#{$object-namespace}flag--tiny,
    %#{$object-namespace}flag--tiny {

        > .#{$object-namespace}flag__img,
        > %#{$object-namespace}flag__img {
            padding-right: $flag-gutter--tiny;
        }

        @if ($enable-flag--rev == true) {

            /**
             * Tiny reversed flags.
             */

            &.#{$object-namespace}flag--rev,
            &%#{$object-namespace}flag--rev {

                > .#{$object-namespace}flag__img,
                > %#{$object-namespace}flag__img {
                    padding-right: 0;
                    padding-left:  $flag-gutter--tiny;
                }

            }

        }

    }

}

@if ($enable-flag--small == true) {

    /**
     * Small flags.
     */

    .#{$object-namespace}flag--small,
    %#{$object-namespace}flag--small {

        > .#{$object-namespace}flag__img,
        > %#{$object-namespace}flag__img {
            padding-right: $flag-gutter--small;
        }

        @if ($enable-flag--rev == true) {

            /**
             * Small reversed flags.
             */

            &.#{$object-namespace}flag--rev,
            &%#{$object-namespace}flag--rev {

                > .#{$object-namespace}flag__img,
                > %#{$object-namespace}flag__img {
                    padding-right: 0;
                    padding-left:  $flag-gutter--small;
                }

            }

        }

    }

}

@if ($enable-flag--large == true) {

    /**
     * Large flags.
     */

    .#{$object-namespace}flag--large,
    %#{$object-namespace}flag--large {

        > .#{$object-namespace}flag__img,
        > %#{$object-namespace}flag__img {
            padding-right: $flag-gutter--large;
        }

        @if ($enable-flag--rev == true) {

            /**
             * Large reversed flags.
             */

            &.#{$object-namespace}flag--rev,
            &%#{$object-namespace}flag--rev {

                > .#{$object-namespace}flag__img,
                > %#{$object-namespace}flag__img {
                    padding-right: 0;
                    padding-left:  $flag-gutter--large;
                }

            }

        }

    }

}

@if ($enable-flag--huge == true) {

    /**
     * Huge flags.
     */

    .#{$object-namespace}flag--huge,
    %#{$object-namespace}flag--huge {

        > .#{$object-namespace}flag__img,
        > %#{$object-namespace}flag__img {
            padding-right: $flag-gutter--huge;
        }

        @if ($enable-flag--rev == true) {

            /**
             * Huge reversed flags.
             */

            &.#{$object-namespace}flag--rev,
            &%#{$object-namespace}flag--rev {

                > .#{$object-namespace}flag__img,
                > %#{$object-namespace}flag__img {
                    padding-right: 0;
                    padding-left:  $flag-gutter--huge;
                }

            }

        }

    }

}





@if ($enable-flag--rev == true) {

    /**
     * Reversed flag objects have their image-content to the right, and text-content
     * to the left.
     *
     * 1. Swap the rendered direction of the object…
     * 2. …and reset it.
     * 3. Reassign margins to the correct sides.
     */

    .#{$object-namespace}flag--rev,
    %#{$object-namespace}flag--rev {
        direction: rtl; /* [1] */

        > .#{$object-namespace}flag__img,
        > %#{$object-namespace}flag__img,
        > .#{$object-namespace}flag__body,
        > %#{$object-namespace}flag__body {
            direction: ltr; /* [2] */
        }

        > .#{$object-namespace}flag__img,
        > %#{$object-namespace}flag__img {
            padding-right: 0; /* [3] */
            padding-left: $flag-gutter; /* [3] */
        }

    }

}





@if ($enable-flag--flush == true) {

    /**
     * Flush flag objects have no space between the image- and text-content.
     */

    .#{$object-namespace}flag--flush,
    %#{$object-namespace}flag--flush {

        > .#{$object-namespace}flag__img,
        > %#{$object-namespace}flag__img {
            padding-right: 0;
            padding-left:  0;
        }

    }

}





@if ($enable-flag--top == true) {

    /**
     * Vertically top aligned flag objects.
     */

    .#{$object-namespace}flag--top,
    %#{$object-namespace}flag--top {

        > .#{$object-namespace}flag__img,
        > %#{$object-namespace}flag__img,
        > .#{$object-namespace}flag__body,
        > %#{$object-namespace}flag__body {
            vertical-align: top;
        }

    }

}

@if ($enable-flag--bottom == true) {

    /**
     * Vertically bottom aligned flag objects.
     */

    .#{$object-namespace}flag--bottom,
    %#{$object-namespace}flag--bottom {

        > .#{$object-namespace}flag__img,
        > %#{$object-namespace}flag__img,
        > .#{$object-namespace}flag__body,
        > %#{$object-namespace}flag__body {
            vertical-align: bottom;
        }

    }

}




@if ($enable-flag--responsive == true) {

    /**
     * Responsive flag objects.
     *
     * There is a very pragmatic, simple implementation of a responsive flag
     * object, which simply places the text-content beneath the image-content.
     *
     * We use a `max-width` media query because:
     *
     * a) it is the least verbose method in terms of amount of code required.
     * b) the flag object’s default state is image-next-to-text, so its stacked
     *    state is the exception, rather than the rule.
     */

    @media screen and (max-width: $flag-collapse-at) {

        .#{$object-namespace}flag--responsive,
        %#{$object-namespace}flag--responsive {

            @if ($enable-flag--rev == true) {

                /**
                 * Disable reversal of content because there is no concept of
                 * ‘reversed’ in a stacked layout.
                 */
                direction: ltr;
            }

            &,
            > .#{$object-namespace}flag__img,
            > %#{$object-namespace}flag__img,
            > .#{$object-namespace}flag__body,
            > %#{$object-namespace}flag__body {
                display: block;
            }

            /**
             * Rework the spacings on regular flag objects.
             */
            > .#{$object-namespace}flag__img,
            > %#{$object-namespace}flag__img {
                padding-right: 0;
                padding-left:  0;
                margin-bottom: $flag-gutter;
            }

            @if ($enable-flag--tiny == true) {

                /**
                 * Tiny responsive flags.
                 *
                 * Take a little more heavy-handed approach to reworking
                 * spacings on flags that are also tiny flags in their regular
                 * state.
                 */

                &.#{$object-namespace}flag--tiny,
                &%#{$object-namespace}flag--tiny {

                    > .#{$object-namespace}flag__img,
                    > %#{$object-namespace}flag__img {
                        padding-right: 0;
                        padding-left:  0;
                        margin-bottom: $flag-gutter--tiny;
                    }

                }

            }

            @if ($enable-flag--small == true) {

                /**
                 * Small responsive flags.
                 *
                 * Take a little more heavy-handed approach to reworking
                 * spacings on flags that are also small flags in their regular
                 * state.
                 */

                &.#{$object-namespace}flag--small,
                &%#{$object-namespace}flag--small {

                    > .#{$object-namespace}flag__img,
                    > %#{$object-namespace}flag__img {
                        padding-right: 0;
                        padding-left:  0;
                        margin-bottom: $flag-gutter--small;
                    }

                }

            }

            @if ($enable-flag--large == true) {

                /**
                 * Large responsive flags.
                 *
                 * Take a little more heavy-handed approach to reworking
                 * spacings on flags that are also large flags in their regular
                 * state.
                 */

                &.#{$object-namespace}flag--large,
                &%#{$object-namespace}flag--large {

                    > .#{$object-namespace}flag__img,
                    > %#{$object-namespace}flag__img {
                        padding-right: 0;
                        padding-left:  0;
                        margin-bottom: $flag-gutter--large;
                    }

                }

            }

            @if ($enable-flag--huge == true) {

                /**
                 * Huge responsive flags.
                 *
                 * Take a little more heavy-handed approach to reworking
                 * spacings on flags that are also huge flags in their regular
                 * state.
                 */

                &.#{$object-namespace}flag--huge,
                &%#{$object-namespace}flag--huge {

                    > .#{$object-namespace}flag__img,
                    > %#{$object-namespace}flag__img {
                        padding-right: 0;
                        padding-left:  0;
                        margin-bottom: $flag-gutter--huge;
                    }

                }

            }

        }

    }

}
