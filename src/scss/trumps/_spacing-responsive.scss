/*------------------------------------*\
    #SPACING-RESPONSIVE
\*------------------------------------*/

/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none
 */

// Predefine the variables below in order to alter and enable specific features.
$enable-responsive-margins:                   false !default;
$enable-responsive-margins--tiny:             false !default;
$enable-responsive-margins--small:            false !default;
$enable-responsive-margins--large:            false !default;
$enable-responsive-margins--huge:             false !default;

$enable-responsive-margins--negative:         false !default;
$enable-responsive-margins--negative-tiny:    false !default;
$enable-responsive-margins--negative-small:   false !default;
$enable-responsive-margins--negative-large:   false !default;
$enable-responsive-margins--negative-huge:    false !default;

$enable-responsive-margins--none:             false !default;

$enable-responsive-paddings:                  false !default;
$enable-responsive-paddings--tiny:            false !default;
$enable-responsive-paddings--small:           false !default;
$enable-responsive-paddings--large:           false !default;
$enable-responsive-paddings--huge:            false !default;

$enable-responsive-paddings--none:            false !default;





// Internally used mixin to quickly generate our different variants based upon
// the breakpoints defined in `settings.responsive`.

@mixin generate-spacing() {

    @each $breakpoint in map-remove($breakpoints, retina) {

        $generate-spacing-alias: nth($breakpoint, 1) !global;

        @include media-query($generate-spacing-alias) {
            @content;
        }

        // Take the global variable back out of scope.
        $generate-spacing-alias: null !global;
    }

}





@if ($enable-responsive-margins == true) {

    /**
     * Margin helper classes.
     *
     * Add margins.
     */

    @include generate-spacing() {

        @include spacing(margin, $margin, null, $generate-spacing-alias);

    }

}


@if ($enable-responsive-margins--tiny == true) {

    /**
     * Add tiny margins.
     */

    @include generate-spacing() {

        @include spacing(margin, $margin--tiny, tiny, $generate-spacing-alias);

    }

}


@if ($enable-responsive-margins--small == true) {

    /**
     * Add small margins.
     */

    @include generate-spacing() {

        @include spacing(margin, $margin--small, small, $generate-spacing-alias);

    }

}


@if ($enable-responsive-margins--large == true) {

    /**
     * Add large margins.
     */

    @include generate-spacing() {

        @include spacing(margin, $margin--large, large, $generate-spacing-alias);

    }

}


@if ($enable-responsive-margins--huge == true) {

    /**
     * Add huge margins.
     */

    @include generate-spacing() {

        @include spacing(margin, $margin--huge, huge, $generate-spacing-alias);

    }

}


@if ($enable-responsive-margins--none == true) {

    /**
     * Remove margins.
     */

    @include generate-spacing() {

        @include spacing(margin, 0, none, $generate-spacing-alias);

    }

}


@if ($enable-responsive-margins--negative == true) {

    /**
     * Negative margins.
     */

    @include generate-spacing() {

        @include spacing(margin, -$margin, null, $generate-spacing-alias);

    }

}


@if ($enable-responsive-margins--negative-tiny == true) {

    /**
     * Tiny negative margins.
     */

    @include generate-spacing() {

        @include spacing(margin, -$margin--tiny, tiny, $generate-spacing-alias);

    }

}


@if ($enable-responsive-margins--negative-small == true) {

    /**
     * Small negative margins.
     */

    @include generate-spacing() {

        @include spacing(margin, -$margin--small, small, $generate-spacing-alias);

    }

}


@if ($enable-responsive-margins--negative-large == true) {

    /**
     * Large negative margins.
     */

    @include generate-spacing() {

        @include spacing(margin, -$margin--large, large, $generate-spacing-alias);

    }

}


@if ($enable-responsive-margins--negative-huge == true) {

    /**
     * Huge negative margins.
     */

    @include generate-spacing() {

        @include spacing(margin, -$margin--huge, huge, $generate-spacing-alias);

    }

}





@if ($enable-responsive-paddings == true) {

    /**
     * Padding helper classes.
     *
     * Add paddings.
     */

    @include generate-spacing() {

        @include spacing(padding, $padding, null, $generate-spacing-alias);

    }

}


@if ($enable-responsive-paddings--tiny == true) {

    /**
     * Add tiny paddings.
     */

    @include generate-spacing() {

        @include spacing(padding, $padding--tiny, tiny, $generate-spacing-alias);

    }

}


@if ($enable-responsive-paddings--small == true) {

    /**
     * Add small paddings.
     */

    @include generate-spacing() {

        @include spacing(padding, $padding--small, small, $generate-spacing-alias);

    }

}


@if ($enable-responsive-paddings--large == true) {

    /**
     * Add large paddings.
     */

    @include generate-spacing() {

        @include spacing(padding, $padding--large, large, $generate-spacing-alias);

    }

}


@if ($enable-responsive-paddings--huge == true) {

    /**
     * Add huge paddings.
     */

    @include generate-spacing() {

        @include spacing(padding, $padding--huge, huge, $generate-spacing-alias);

    }

}


@if ($enable-responsive-paddings--none == true) {

    /**
     * Remove paddings.
     */

    @include generate-spacing() {

        @include spacing(padding, 0, none, $generate-spacing-alias);

    }

}